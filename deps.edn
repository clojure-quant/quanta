{:paths ["src" "resources"]
 :deps
 {ta/warehouse {:local/root "./lib/warehouse" :deps/manifest :deps}
  ta/data {:local/root "./lib/data" :deps/manifest :deps}
  ta/ta {:local/root "./lib/ta" :deps/manifest :deps}}
 :aliases
 {; test-clj does not run in github actions
  :test-clj {:extra-paths ["test"]
             :extra-deps  {eftest/eftest {:mvn/version "0.5.7"}}
             :main-opts   ["-e"  "(require,'[eftest.runner,:refer,[find-tests,run-tests]]),(run-tests,(find-tests,\"test\"))"]}

  :test {:extra-paths ["test/main/clojure"]
         :extra-deps  {lambdaisland/kaocha {:mvn/version "0.0-529"}}
         :main-opts   ["-m" "kaocha.runner"]}

  :garamond
  {:main-opts ["-m" "garamond.main"]
   :extra-deps {com.workframe/garamond {:mvn/version "0.4.0"}}}

  ;https://github.com/applied-science/deps-library
  :release {:extra-deps {applied-science/deps-library {:mvn/version "0.4.0"}}
            :main-opts ["-m" "applied-science.deps-library"]}

  ; https://github.com/weavejester/cljfmt
  :cljfmt     {:extra-deps {cljfmt/cljfmt {:mvn/version "0.7.0"}}
               :main-opts ["-m" "cljfmt.main" "check" "--indents" "cljfmt.edn"]}
  :cljfmt-fix {:extra-deps {cljfmt/cljfmt {:mvn/version "0.7.0"}}
               :main-opts ["-m" "cljfmt.main" "fix" "--indents" "cljfmt.edn"]}

 ; https://github.com/clj-kondo/clj-kondo/blob/master/doc/jvm.md
  :lint {:extra-deps {clj-kondo/clj-kondo {:mvn/version "RELEASE"}}
         :main-opts ["-m" "clj-kondo.main"
                     "--lint" "src"]}

  :cloverage {:extra-paths ["test"]
              :extra-deps  {cloverage/cloverage {:mvn/version "RELEASE"}}
              :main-opts   ["-m" "cloverage.coverage"
                            "--src-ns-path" "src"
                            "--test-ns-path" "test"]
              :exec-fn     cloverage.coverage/run-project
              :exec-args   {:src-ns-path  ["src"]
                            :test-ns-path ["test"]}}

  :outdated {:extra-deps {com.github.liquidz/antq {:mvn/version "RELEASE"}}
             :main-opts ["-m" "antq.core"]}

  :check {:extra-deps {athos/clj-check {:git/url "https://github.com/athos/clj-check.git"
                                        :sha "0ca84df1357d71429243b99908303f45a934654c"}}
          :main-opts ["-m" "clj-check.check"]}

  ; notebook

  ; -X allows to add config directly in deps.edn; but it supports also a edn file
  :notebook {:extra-deps {org.pinkgorilla/notebook-bundel {:mvn/version "RELEASE"}
                          org.clojure/clojure    {:mvn/version "1.10.3"}
                          org.clojure/core.async {:mvn/version "1.3.618"}
                          ta/demo {:local/root "./profiles/demo" :deps/manifest :deps}}
             :exec-fn pinkgorilla.notebook-bundel/run
             :exec-args {:config {:explorer {:client {:repositories [{:name "local"  :url "/api/explorer" :save true}
                                                                     #_{:name "public" :url "https://raw.githubusercontent.com/pink-gorilla/gorilla-explore/master/resources/list.json"}]}
                                             :server {:resource-root-path "notebooks-none"
                                                      :roots
                                                      {:gorilla-ui "./resources/notebooks"
                        ;:backtest "../../quant/backtest/notebooks"
                        ;:fquant "../../quant/clojureQuant/notebooks"
                                                       }}}}}}

 :notebook2 {:extra-deps {org.pinkgorilla/notebook {:mvn/version "RELEASE"}
                          org.pinkgorilla/ui-vega  {:mvn/version "0.0.5"}
                          org.pinkgorilla/ui-input {:mvn/version "0.0.3"}
                          org.clojure/clojure    {:mvn/version "1.10.3"}
                          org.clojure/core.async {:mvn/version "1.3.618"}
                          ta/demo {:local/root "./profiles/demo" :deps/manifest :deps}}
             :exec-fn pinkgorilla.notebook-ui.app.app/notebook-run!
             :exec-args {:profile "watch"
                    :config {:goldly {:enabled true
                                           :extensions [; taken from goldly-bundel and modified
                                                        [pinkgorilla.repl.goldly.core]
                                                        [pinkgorilla.repl.goldly.snippets]
                                                        [pinkgorilla.vega.goldly]
                                                        [pinkgorilla.vega.snippets]
                                           ]}
                                  :explorer {:client {:repositories [{:name "local"  :url "/api/explorer" :save true}
                                                                     #_{:name "public" :url "https://raw.githubusercontent.com/pink-gorilla/gorilla-explore/master/resources/list.json"}]}
                                             :server {:resource-root-path "notebooks-none"
                                                      :roots
                                                      {:gorilla-ui "./resources/notebooks"
                        ;:backtest "../../quant/backtest/notebooks"
                        ;:fquant "../../quant/clojureQuant/notebooks"
                                                       }}}}}}

  
  :goldly
  {:extra-deps {org.pinkgorilla/goldly-bundel {:mvn/version "RELEASE"}}
   :exec-fn goldly-bundel/run
   :exec-args {:config {:goldly {:systems [systems.snippet-registry  ; if you want snippet browser started
                                           systems.snippet-scratchpad
                                           demo.hello-user]}}}}

  :demo
  {:extra-deps {ta/demo {:local/root "./profiles/demo" :deps/manifest :deps}}
   ;:exec-fn demo.swinger/calc
   ;:exec-args {}
   }

;
  }}

