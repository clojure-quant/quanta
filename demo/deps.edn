{:paths ["src" "classes"]
 :deps {ta/trateg {:local/root ".." :deps/manifest :deps}}
 :aliases
 {

  :import {:exec-fn demo.warehouse/import
           :exec-args {}}
  :show {:exec-fn demo.warehouse/show
         :exec-args {}}
  :calc {:exec-fn demo.swinger/calc
         :exec-args {}}

  :demo {;:exec-fn demo.swinger/calc
          ;:exec-args {}
         }

   ; notebook

  ; -X allows to add config directly in deps.edn; but it supports also a edn file
  :notebook {:extra-deps {org.pinkgorilla/notebook-bundel {:mvn/version "RELEASE"}
                          org.clojure/clojure    {:mvn/version "1.10.3"}
                          org.clojure/core.async {:mvn/version "1.3.618"}
                          ta/demo {:local/root "./profiles/demo" :deps/manifest :deps}}
             :exec-fn pinkgorilla.notebook-bundel/run
             :exec-args {:config {:explorer {:client {:repositories [{:name "local"  :url "/api/explorer" :save true}
                                                                     #_{:name "public" :url "https://raw.githubusercontent.com/pink-gorilla/gorilla-explore/master/resources/list.json"}]}
                                             :server {:resource-root-path "notebooks-none"
                                                      :roots
                                                      {:gorilla-ui "./resources/notebooks"
                        ;:backtest "../../quant/backtest/notebooks"
                        ;:fquant "../../quant/clojureQuant/notebooks"
                                                       }}}}}}

  :notebook2 {:extra-deps {org.pinkgorilla/notebook {:mvn/version "RELEASE"}
                           org.pinkgorilla/ui-vega  {:mvn/version "0.0.7"}
                           org.pinkgorilla/ui-input {:mvn/version "0.0.3"}
                           org.clojure/clojure    {:mvn/version "1.10.3"}
                           org.clojure/core.async {:mvn/version "1.3.618"}
                           ta/demo {:local/root "./profiles/demo" :deps/manifest :deps}}
              :exec-fn pinkgorilla.notebook-ui.app.app/notebook-run!
              :exec-args {:profile "watch"
                          :config {:goldly {:enabled true
                                            :extensions [; taken from goldly-bundel and modified
                                                         [pinkgorilla.repl.goldly.core]
                                                         [pinkgorilla.repl.goldly.snippets]
                                                         [pinkgorilla.vega.goldly]
                                                         [pinkgorilla.vega.snippets]]}
                                   :explorer {:client {:repositories [{:name "local"  :url "/api/explorer" :save true}
                                                                      #_{:name "public" :url "https://raw.githubusercontent.com/pink-gorilla/gorilla-explore/master/resources/list.json"}]}
                                              :server {:resource-root-path "notebooks-none"
                                                       :roots
                                                       {:gorilla-ui "./resources/notebooks"
                        ;:backtest "../../quant/backtest/notebooks"
                        ;:fquant "../../quant/clojureQuant/notebooks"
                                                        }}}}}}


  :goldly
  {:extra-deps {org.pinkgorilla/goldly-bundel {:mvn/version "RELEASE"}}
   :exec-fn goldly-bundel/run
   :exec-args {:config {:goldly {:systems [systems.snippet-registry  ; if you want snippet browser started
                                           systems.snippet-scratchpad
                                           demo.hello-user]}}}}



;
  }}

