{:paths ["src" "classes"]
 :deps {ta/trateg {:local/root "../.." :deps/manifest :deps}
        ta/data {:local/root "../data" :deps/manifest :deps}
        com.taoensso/timbre {:mvn/version "5.1.2"} ; clj/cljs logging
        }
 :aliases
 {:outdated {:extra-deps {com.github.liquidz/antq {:mvn/version "RELEASE"}}
             :main-opts ["-m" "antq.core"]}


   ; notebook

  ; -X allows to add config directly in deps.edn; but it supports also a edn file
  :notebook
  {:extra-deps {org.pinkgorilla/notebook-bundel {:mvn/version "RELEASE"}
                org.clojure/clojure    {:mvn/version "1.10.3"}
                org.clojure/core.async {:mvn/version "1.3.618"}
                ta/demo {:local/root "./profiles/demo" :deps/manifest :deps}}
   :exec-fn pinkgorilla.notebook-bundel/run
   :exec-args {:config {:explorer {:client {:repositories [{:name "local"  :url "/api/explorer" :save true}
                                                           #_{:name "public" :url "https://raw.githubusercontent.com/pink-gorilla/gorilla-explore/master/resources/list.json"}]}
                                   :server {:resource-root-path "notebooks-none"
                                            :roots
                                            {:ta "./resources/notebooks"}}}}}}

  :notebook2
  {:extra-deps {org.pinkgorilla/goldly {:mvn/version "RELEASE"}
                org.pinkgorilla/notebook {:mvn/version "RELEASE"}
                org.pinkgorilla/ui-input {:mvn/version "0.0.11"}
                org.pinkgorilla/ui-highcharts {:mvn/version "0.0.9"}
                org.clojure/clojure    {:mvn/version "1.10.3"}
                org.clojure/core.async {:mvn/version "1.3.618"}
                ta/demo {:local/root "./profiles/demo" :deps/manifest :deps}}
   :exec-fn pinkgorilla.notebook-ui.app.app/notebook-run!
   :exec-args {:profile "watch"
               :config {:goldly {:enabled true :extensions []}
                        :explorer {:client {:repositories [{:name "local"  :url "/api/explorer" :save true}
                                                           #_{:name "public" :url "https://raw.githubusercontent.com/pink-gorilla/gorilla-explore/master/resources/list.json"}]}
                                   :server {:resource-root-path "notebooks-none"
                                            :roots {:ta "./resources/notebooks"}}}}}}


  :goldlyb
  {:extra-deps {org.pinkgorilla/goldly-bundel {:mvn/version "0.3.21"}}
   :exec-fn goldly-server.app/goldly-server-run!
   :exec-args {:profile "jetty"
               :config {:goldly {:lazy true
                                 :routes {"" :user/main
                                          "error" :user/error
                                          "chart" :user/chart
                                          "experiment" :user/experiment}
                                 :systems [demo.goldly.services
                                           systems.snippet-registry  ; if you want snippet browser started
                                           systems.snippet-scratchpad]}}}}

  :goldly
  {:extra-deps {org.pinkgorilla/goldly {:mvn/version "0.3.20"}
                org.pinkgorilla/ui-input {:mvn/version "0.0.11"}
                org.pinkgorilla/ui-highcharts {:mvn/version "0.0.9"}
                org.pinkgorilla/ui-gorilla  {:mvn/version "0.3.50"}
                org.pinkgorilla/ui-aggrid {:mvn/version "0.0.8"}}
   :exec-fn goldly-server.app/goldly-server-run!
   :exec-args {:profile "watch2"
               :config {:webly {:ns-clj [goldly-server.app
                                         demo.goldly.services]}
                        :goldly {:lazy true
                                 :routes {"" :user/main
                                          "chart" :user/chart
                                          "experiment" :user/experiment}}
                        :systems [demo.goldly.services
                                  systems.snippet-registry  ; if you want snippet browser started
                                  systems.snippet-scratchpad]}}}

  ;; demo jobs

  :import {:exec-fn demo.data.import/import-ts
           :exec-args {:symbol-list "test" ; "fidelity-select"
                       }}

  :show {:exec-fn demo.data.import/show-ts
         :exec-args {:symbol-list "test" ; "fidelity-select"
                     }}


  :calc {:exec-fn demo.swinger/calc
         :exec-args {}}

  :demo {;:exec-fn demo.swinger/calc
          ;:exec-args {}
         }

;
  }}

